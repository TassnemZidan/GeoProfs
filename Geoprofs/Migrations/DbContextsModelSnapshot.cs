// <auto-generated />
using System;
using Geoprofs.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Geoprofs.Migrations
{
    [DbContext(typeof(DbContexts))]
    partial class DbContextsModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Geoprofs.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BSN")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("PositionType")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<int>("VacationBalance")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BSN = 2595714,
                            Lastname = "Leeuwen",
                            Name = "Sandra",
                            PositionType = 0,
                            StartDate = new DateTime(2008, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VacationBalance = 160
                        },
                        new
                        {
                            Id = 2,
                            BSN = 2375648,
                            Lastname = "Anders",
                            Name = "Jarno",
                            PositionType = 1,
                            StartDate = new DateTime(2001, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupervisorId = 1,
                            VacationBalance = 160
                        },
                        new
                        {
                            Id = 3,
                            BSN = 1983821,
                            Lastname = "Smits",
                            Name = "Eric",
                            PositionType = 0,
                            StartDate = new DateTime(2008, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupervisorId = 1,
                            VacationBalance = 160
                        },
                        new
                        {
                            Id = 4,
                            BSN = 2452942,
                            Lastname = "Janssen",
                            Name = "Amin",
                            PositionType = 0,
                            StartDate = new DateTime(2006, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupervisorId = 1,
                            VacationBalance = 160
                        },
                        new
                        {
                            Id = 5,
                            BSN = 9367265,
                            Lastname = "Pieters",
                            Name = "Klaas",
                            PositionType = 0,
                            StartDate = new DateTime(2008, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupervisorId = 1,
                            VacationBalance = 160
                        },
                        new
                        {
                            Id = 6,
                            BSN = 7439852,
                            Lastname = "Geulen",
                            Name = "Jasper",
                            PositionType = 0,
                            StartDate = new DateTime(2011, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupervisorId = 1,
                            VacationBalance = 160
                        },
                        new
                        {
                            Id = 7,
                            BSN = 2239824,
                            Lastname = "Klaassen",
                            Name = "Sarah",
                            PositionType = 0,
                            StartDate = new DateTime(2013, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupervisorId = 1,
                            VacationBalance = 160
                        },
                        new
                        {
                            Id = 8,
                            BSN = 9836425,
                            Lastname = "Mahmoud",
                            Name = "Hannah",
                            PositionType = 0,
                            StartDate = new DateTime(2018, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupervisorId = 1,
                            VacationBalance = 160
                        },
                        new
                        {
                            Id = 9,
                            BSN = 1882563,
                            Lastname = "Meeuwsen",
                            Name = "Armand",
                            PositionType = 1,
                            StartDate = new DateTime(2008, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupervisorId = 1,
                            VacationBalance = 160
                        },
                        new
                        {
                            Id = 10,
                            BSN = 1782463,
                            Lastname = "Kadour",
                            Name = "Amir",
                            PositionType = 0,
                            StartDate = new DateTime(2019, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupervisorId = 1,
                            VacationBalance = 160
                        });
                });

            modelBuilder.Entity("Geoprofs.Models.Register", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TypeLeave")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Registers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 3,
                            EndDate = new DateTime(2008, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsApproved = false,
                            Note = "Doctor's visit",
                            StartDate = new DateTime(2008, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeLeave = 0
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 4,
                            EndDate = new DateTime(2008, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsApproved = true,
                            Note = "Doctor's visit",
                            StartDate = new DateTime(2008, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeLeave = 0
                        },
                        new
                        {
                            Id = 3,
                            EmployeeId = 6,
                            EndDate = new DateTime(2008, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsApproved = false,
                            Note = "Doctor's visit",
                            StartDate = new DateTime(2008, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeLeave = 0
                        },
                        new
                        {
                            Id = 4,
                            EmployeeId = 8,
                            EndDate = new DateTime(2008, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsApproved = true,
                            Note = "Doctor's visit",
                            StartDate = new DateTime(2008, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeLeave = 0
                        },
                        new
                        {
                            Id = 5,
                            EmployeeId = 5,
                            EndDate = new DateTime(2008, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsApproved = true,
                            Note = "Doctor's visit",
                            StartDate = new DateTime(2008, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeLeave = 0
                        },
                        new
                        {
                            Id = 6,
                            EmployeeId = 1,
                            EndDate = new DateTime(2008, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsApproved = false,
                            Note = "Doctor's visit",
                            StartDate = new DateTime(2008, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeLeave = 0
                        });
                });

            modelBuilder.Entity("Geoprofs.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            Password = "$2a$11$MSrjENQsXK27CSV0PbWXJ.my2RkK6GiMh8QqN6QujazgcpxPJAZVK",
                            Role = 0,
                            Username = "S.Leeuwen"
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 2,
                            Password = "$2a$11$nR99kkQk5qKkskPxu1o/buUHwhz7xQp8bnwN9XMqZMyBLp4Y0fKB2",
                            Role = 1,
                            Username = "J.Anders"
                        },
                        new
                        {
                            Id = 3,
                            EmployeeId = 3,
                            Password = "$2a$11$6aVCuFfTf.2siR8f7fnpoegVKBl/230YxwDoRilKnMBExU5.ylhsu",
                            Role = 1,
                            Username = "E.Smits"
                        },
                        new
                        {
                            Id = 4,
                            EmployeeId = 4,
                            Password = "$2a$11$JWahAUpVacVhqW1u8dcJxeFUoHTnNa8J.vip7BS15z9avYJoz4JlW",
                            Role = 1,
                            Username = "A.Janssen"
                        },
                        new
                        {
                            Id = 5,
                            EmployeeId = 5,
                            Password = "$2a$11$WMl3QF1HQjazox.Dz/hcCeFaV0zor2ka94n4jITPfQDfi2v4HcS7S",
                            Role = 1,
                            Username = "K.Pieters"
                        },
                        new
                        {
                            Id = 6,
                            EmployeeId = 6,
                            Password = "$2a$11$fj6NF9fhsuPE3kwZ8Zlgq.xTQqNwUAjq1YQjX24Y3H5KQro/f1gPy",
                            Role = 1,
                            Username = "J.Geulen"
                        },
                        new
                        {
                            Id = 7,
                            EmployeeId = 7,
                            Password = "$2a$11$W85CtTWbxC55tzRp4qKEhOZNFlW9NXDvm9LUnX0sPXkPEumpZsWy.",
                            Role = 1,
                            Username = "S.Klaassen"
                        },
                        new
                        {
                            Id = 8,
                            EmployeeId = 8,
                            Password = "$2a$11$9DI8CflhrrxWjCwxmkn2neOSWixb5ZMhhpyTZ5QpdJJByT6P20ele",
                            Role = 1,
                            Username = "H.Mahmoud"
                        },
                        new
                        {
                            Id = 9,
                            EmployeeId = 9,
                            Password = "$2a$11$Nnlv/wKlRQ7SBj3BIHNtgOvtMW2XRSZH3r4aDTkqI4m7PNvpHoqFG",
                            Role = 1,
                            Username = "A.Meeuwsen"
                        },
                        new
                        {
                            Id = 10,
                            EmployeeId = 10,
                            Password = "$2a$11$dlguPSNYppexMQZBY4/WKOFNQRT7Wc1yoV0hCzx/A643JrPqeH3NS",
                            Role = 1,
                            Username = "A.Kadour"
                        });
                });

            modelBuilder.Entity("Geoprofs.Models.Employee", b =>
                {
                    b.HasOne("Geoprofs.Models.Employee", "Supervisor")
                        .WithMany("Employees")
                        .HasForeignKey("SupervisorId");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Geoprofs.Models.Register", b =>
                {
                    b.HasOne("Geoprofs.Models.Employee", "Employee")
                        .WithMany("Registers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Geoprofs.Models.User", b =>
                {
                    b.HasOne("Geoprofs.Models.Employee", "Employee")
                        .WithMany("Users")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Geoprofs.Models.Employee", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Registers");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
